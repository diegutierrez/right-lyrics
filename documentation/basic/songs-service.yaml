apiVersion: v1
kind: Template
metadata:
  name: songs-service
objects:
- apiVersion: v1
  stringData:
    database-name: right-lyrics
    database-password: right-lyrics
    database-user: right-lyrics
  kind: Secret
  metadata:
    labels:
      app: ${NAME_PREFFIX}-songs-postgresql
    name: ${NAME_PREFFIX}-songs-postgresql
  type: Opaque
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NAME_PREFFIX}-songs-postgresql
      app.openshift.io/runtime: postgresql
    name: ${NAME_PREFFIX}-songs-postgresql
  spec:
    replicas: 1
    selector:
      name: ${NAME_PREFFIX}-songs-postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${NAME_PREFFIX}-songs-postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME_PREFFIX}-songs-postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME_PREFFIX}-songs-postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${NAME_PREFFIX}-songs-postgresql
          image: ' '
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: ${NAME_PREFFIX}-songs-postgresql-data
        volumes:
        - emptyDir: {}
          name: ${NAME_PREFFIX}-songs-postgresql-data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:10
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME_PREFFIX}-songs-postgresql
    name: ${NAME_PREFFIX}-songs-postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: ${NAME_PREFFIX}-songs-postgresql
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: ${NAME_PREFFIX}-songs-service
    name: ${NAME_PREFFIX}-songs-service
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${NAME_PREFFIX}-songs-service
    name: ${NAME_PREFFIX}-songs-service
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME_PREFFIX}-songs-service:latest
    source:
      contextDir: songs-service
      git:
        uri: https://github.com/leandroberetta/right-lyrics
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.7
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      app.openshift.io/connects-to: ${NAME_PREFFIX}-songs-postgresql,hits-service
    labels:
      app: ${NAME_PREFFIX}-songs-service
      app.openshift.io/runtime: spring
    name: ${NAME_PREFFIX}-songs-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${NAME_PREFFIX}-songs-service
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: ${NAME_PREFFIX}-songs-service
      spec:
        containers:
        - env:
          - name: SPRING_DATASOURCE_URL
            value: jdbc:postgresql://${NAME_PREFFIX}-songs-postgresql:5432/right-lyrics
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${NAME_PREFFIX}-songs-postgresql
          - name: SPRING_DATASOURCE_USERNAME
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${NAME_PREFFIX}-songs-postgresql
          - name: HITS_SERVICE_URL
            value: http://hits-service:8080
          image: songs-service:latest
          imagePullPolicy: Always
          name: songs-service
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${NAME_PREFFIX}-songs-service
        from:
          kind: ImageStreamTag
          name: ${NAME_PREFFIX}-songs-service:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NAME_PREFFIX}-songs-service
    name: ${NAME_PREFFIX}-songs-service
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      deploymentconfig: ${NAME_PREFFIX}-songs-service
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${NAME_PREFFIX}-songs-service
    name: ${NAME_PREFFIX}-songs-service
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${NAME_PREFFIX}-songs-service
parameters:
- description: Name Preffix
  name: NAME_PREFFIX